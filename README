======================================
 DMon - Process Monitoring With Style
======================================

No README yet, in the meanwhile you may want to read this post on DMon:

  http://blogs.igalia.com/aperez/2010/08/dmon-process-monitoring-with-style/

There are manual pages, so please take a look at them.


Bulding a multicall binary
==========================

As an option it is supported to build all tools into a single binary which
can be symlinked with different names to switch between them (Ã la BusyBox).
This is useful to save space i.e. in embedded devices.

You can build all DMon tools this way by passing ``MULTICALL=1`` to Make::

  make MULTICALL=1

Remember to pass the option when doing ``make install`` as well::

  make MULTICALL=1 install


Optionally adding "rotlog" built-in
-----------------------------------
When building a multicall binary, you can get a copy of the "rotlog" program
(similar to dlog, with log rotation support, see http://gitorious.org/rotlog)
by defining the ROTLOG variable to the path where the rotlog sources are
located. For example:

  make MULTICALL=1 ROTLOG=../rotlog-0.2.1/


Building libnofork.so
---------------------
A tiny LD_PRELOAD-able "libnofork.so" library can be built by passing
LIBNOFORK=1 to make. This library overrides the fork(2) and daemon(3)
functions from the system libraries, in such a way that the process under
effect will not be able of forking. This is interesting for running DMon
with programs that have no option to instruct them not to fork.

